
ex1again:     file format elf32-i386


Disassembly of section .init:

00000418 <_init>:
 418:	53                   	push   %ebx
 419:	83 ec 08             	sub    $0x8,%esp
 41c:	e8 bf 00 00 00       	call   4e0 <__x86.get_pc_thunk.bx>
 421:	81 c3 df 1b 00 00    	add    $0x1bdf,%ebx
 427:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
 42d:	85 c0                	test   %eax,%eax
 42f:	74 05                	je     436 <_init+0x1e>
 431:	e8 62 00 00 00       	call   498 <.plt.got+0x8>
 436:	83 c4 08             	add    $0x8,%esp
 439:	5b                   	pop    %ebx
 43a:	c3                   	ret    

Disassembly of section .plt:

00000440 <.plt>:
 440:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 446:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 44c:	00 00                	add    %al,(%eax)
	...

00000450 <printf@plt>:
 450:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 456:	68 00 00 00 00       	push   $0x0
 45b:	e9 e0 ff ff ff       	jmp    440 <.plt>

00000460 <__libc_start_main@plt>:
 460:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 466:	68 08 00 00 00       	push   $0x8
 46b:	e9 d0 ff ff ff       	jmp    440 <.plt>

00000470 <fprintf@plt>:
 470:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 476:	68 10 00 00 00       	push   $0x10
 47b:	e9 c0 ff ff ff       	jmp    440 <.plt>

00000480 <atoi@plt>:
 480:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 486:	68 18 00 00 00       	push   $0x18
 48b:	e9 b0 ff ff ff       	jmp    440 <.plt>

Disassembly of section .plt.got:

00000490 <.plt.got>:
 490:	ff a3 ec ff ff ff    	jmp    *-0x14(%ebx)
 496:	66 90                	xchg   %ax,%ax
 498:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
 49e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000004a0 <_start>:
 4a0:	31 ed                	xor    %ebp,%ebp
 4a2:	5e                   	pop    %esi
 4a3:	89 e1                	mov    %esp,%ecx
 4a5:	83 e4 f0             	and    $0xfffffff0,%esp
 4a8:	50                   	push   %eax
 4a9:	54                   	push   %esp
 4aa:	52                   	push   %edx
 4ab:	e8 22 00 00 00       	call   4d2 <_start+0x32>
 4b0:	81 c3 50 1b 00 00    	add    $0x1b50,%ebx
 4b6:	8d 83 30 e7 ff ff    	lea    -0x18d0(%ebx),%eax
 4bc:	50                   	push   %eax
 4bd:	8d 83 d0 e6 ff ff    	lea    -0x1930(%ebx),%eax
 4c3:	50                   	push   %eax
 4c4:	51                   	push   %ecx
 4c5:	56                   	push   %esi
 4c6:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 4cc:	e8 8f ff ff ff       	call   460 <__libc_start_main@plt>
 4d1:	f4                   	hlt    
 4d2:	8b 1c 24             	mov    (%esp),%ebx
 4d5:	c3                   	ret    
 4d6:	66 90                	xchg   %ax,%ax
 4d8:	66 90                	xchg   %ax,%ax
 4da:	66 90                	xchg   %ax,%ax
 4dc:	66 90                	xchg   %ax,%ax
 4de:	66 90                	xchg   %ax,%ax

000004e0 <__x86.get_pc_thunk.bx>:
 4e0:	8b 1c 24             	mov    (%esp),%ebx
 4e3:	c3                   	ret    
 4e4:	66 90                	xchg   %ax,%ax
 4e6:	66 90                	xchg   %ax,%ax
 4e8:	66 90                	xchg   %ax,%ax
 4ea:	66 90                	xchg   %ax,%ax
 4ec:	66 90                	xchg   %ax,%ax
 4ee:	66 90                	xchg   %ax,%ax

000004f0 <deregister_tm_clones>:
 4f0:	e8 17 01 00 00       	call   60c <__x86.get_pc_thunk.dx>
 4f5:	81 c2 0b 1b 00 00    	add    $0x1b0b,%edx
 4fb:	8d 8a 24 00 00 00    	lea    0x24(%edx),%ecx
 501:	8d 82 27 00 00 00    	lea    0x27(%edx),%eax
 507:	29 c8                	sub    %ecx,%eax
 509:	83 f8 06             	cmp    $0x6,%eax
 50c:	76 17                	jbe    525 <deregister_tm_clones+0x35>
 50e:	8b 82 e4 ff ff ff    	mov    -0x1c(%edx),%eax
 514:	85 c0                	test   %eax,%eax
 516:	74 0d                	je     525 <deregister_tm_clones+0x35>
 518:	55                   	push   %ebp
 519:	89 e5                	mov    %esp,%ebp
 51b:	83 ec 14             	sub    $0x14,%esp
 51e:	51                   	push   %ecx
 51f:	ff d0                	call   *%eax
 521:	83 c4 10             	add    $0x10,%esp
 524:	c9                   	leave  
 525:	f3 c3                	repz ret 
 527:	89 f6                	mov    %esi,%esi
 529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000530 <register_tm_clones>:
 530:	e8 d7 00 00 00       	call   60c <__x86.get_pc_thunk.dx>
 535:	81 c2 cb 1a 00 00    	add    $0x1acb,%edx
 53b:	55                   	push   %ebp
 53c:	8d 8a 24 00 00 00    	lea    0x24(%edx),%ecx
 542:	8d 82 24 00 00 00    	lea    0x24(%edx),%eax
 548:	89 e5                	mov    %esp,%ebp
 54a:	53                   	push   %ebx
 54b:	29 c8                	sub    %ecx,%eax
 54d:	c1 f8 02             	sar    $0x2,%eax
 550:	83 ec 04             	sub    $0x4,%esp
 553:	89 c3                	mov    %eax,%ebx
 555:	c1 eb 1f             	shr    $0x1f,%ebx
 558:	01 d8                	add    %ebx,%eax
 55a:	d1 f8                	sar    %eax
 55c:	74 14                	je     572 <register_tm_clones+0x42>
 55e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 564:	85 d2                	test   %edx,%edx
 566:	74 0a                	je     572 <register_tm_clones+0x42>
 568:	83 ec 08             	sub    $0x8,%esp
 56b:	50                   	push   %eax
 56c:	51                   	push   %ecx
 56d:	ff d2                	call   *%edx
 56f:	83 c4 10             	add    $0x10,%esp
 572:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 575:	c9                   	leave  
 576:	c3                   	ret    
 577:	89 f6                	mov    %esi,%esi
 579:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000580 <__do_global_dtors_aux>:
 580:	55                   	push   %ebp
 581:	89 e5                	mov    %esp,%ebp
 583:	53                   	push   %ebx
 584:	e8 57 ff ff ff       	call   4e0 <__x86.get_pc_thunk.bx>
 589:	81 c3 77 1a 00 00    	add    $0x1a77,%ebx
 58f:	83 ec 04             	sub    $0x4,%esp
 592:	80 bb 24 00 00 00 00 	cmpb   $0x0,0x24(%ebx)
 599:	75 27                	jne    5c2 <__do_global_dtors_aux+0x42>
 59b:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
 5a1:	85 c0                	test   %eax,%eax
 5a3:	74 11                	je     5b6 <__do_global_dtors_aux+0x36>
 5a5:	83 ec 0c             	sub    $0xc,%esp
 5a8:	ff b3 20 00 00 00    	pushl  0x20(%ebx)
 5ae:	e8 dd fe ff ff       	call   490 <.plt.got>
 5b3:	83 c4 10             	add    $0x10,%esp
 5b6:	e8 35 ff ff ff       	call   4f0 <deregister_tm_clones>
 5bb:	c6 83 24 00 00 00 01 	movb   $0x1,0x24(%ebx)
 5c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5c5:	c9                   	leave  
 5c6:	c3                   	ret    
 5c7:	89 f6                	mov    %esi,%esi
 5c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005d0 <frame_dummy>:
 5d0:	e8 37 00 00 00       	call   60c <__x86.get_pc_thunk.dx>
 5d5:	81 c2 2b 1a 00 00    	add    $0x1a2b,%edx
 5db:	8d 82 f0 fe ff ff    	lea    -0x110(%edx),%eax
 5e1:	8b 08                	mov    (%eax),%ecx
 5e3:	85 c9                	test   %ecx,%ecx
 5e5:	75 09                	jne    5f0 <frame_dummy+0x20>
 5e7:	e9 44 ff ff ff       	jmp    530 <register_tm_clones>
 5ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 5f0:	8b 92 f8 ff ff ff    	mov    -0x8(%edx),%edx
 5f6:	85 d2                	test   %edx,%edx
 5f8:	74 ed                	je     5e7 <frame_dummy+0x17>
 5fa:	55                   	push   %ebp
 5fb:	89 e5                	mov    %esp,%ebp
 5fd:	83 ec 14             	sub    $0x14,%esp
 600:	50                   	push   %eax
 601:	ff d2                	call   *%edx
 603:	83 c4 10             	add    $0x10,%esp
 606:	c9                   	leave  
 607:	e9 24 ff ff ff       	jmp    530 <register_tm_clones>

0000060c <__x86.get_pc_thunk.dx>:
 60c:	8b 14 24             	mov    (%esp),%edx
 60f:	c3                   	ret    

00000610 <calc>:
 610:	55                   	push   %ebp
 611:	89 e5                	mov    %esp,%ebp
 613:	e8 a5 00 00 00       	call   6bd <__x86.get_pc_thunk.ax>
 618:	05 e8 19 00 00       	add    $0x19e8,%eax
 61d:	8b 45 08             	mov    0x8(%ebp),%eax
 620:	83 c0 01             	add    $0x1,%eax
 623:	5d                   	pop    %ebp
 624:	c3                   	ret    

00000625 <main>:
 625:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 629:	83 e4 f0             	and    $0xfffffff0,%esp
 62c:	ff 71 fc             	pushl  -0x4(%ecx)
 62f:	55                   	push   %ebp
 630:	89 e5                	mov    %esp,%ebp
 632:	53                   	push   %ebx
 633:	51                   	push   %ecx
 634:	83 ec 10             	sub    $0x10,%esp
 637:	e8 a4 fe ff ff       	call   4e0 <__x86.get_pc_thunk.bx>
 63c:	81 c3 c4 19 00 00    	add    $0x19c4,%ebx
 642:	89 c8                	mov    %ecx,%eax
 644:	83 38 02             	cmpl   $0x2,(%eax)
 647:	74 28                	je     671 <main+0x4c>
 649:	8b 40 04             	mov    0x4(%eax),%eax
 64c:	8b 10                	mov    (%eax),%edx
 64e:	8b 83 e8 ff ff ff    	mov    -0x18(%ebx),%eax
 654:	8b 00                	mov    (%eax),%eax
 656:	83 ec 04             	sub    $0x4,%esp
 659:	52                   	push   %edx
 65a:	8d 93 50 e7 ff ff    	lea    -0x18b0(%ebx),%edx
 660:	52                   	push   %edx
 661:	50                   	push   %eax
 662:	e8 09 fe ff ff       	call   470 <fprintf@plt>
 667:	83 c4 10             	add    $0x10,%esp
 66a:	b8 01 00 00 00       	mov    $0x1,%eax
 66f:	eb 42                	jmp    6b3 <main+0x8e>
 671:	8b 40 04             	mov    0x4(%eax),%eax
 674:	83 c0 04             	add    $0x4,%eax
 677:	8b 00                	mov    (%eax),%eax
 679:	83 ec 0c             	sub    $0xc,%esp
 67c:	50                   	push   %eax
 67d:	e8 fe fd ff ff       	call   480 <atoi@plt>
 682:	83 c4 10             	add    $0x10,%esp
 685:	89 45 f4             	mov    %eax,-0xc(%ebp)
 688:	83 ec 0c             	sub    $0xc,%esp
 68b:	ff 75 f4             	pushl  -0xc(%ebp)
 68e:	e8 7d ff ff ff       	call   610 <calc>
 693:	83 c4 10             	add    $0x10,%esp
 696:	89 45 f0             	mov    %eax,-0x10(%ebp)
 699:	83 ec 08             	sub    $0x8,%esp
 69c:	ff 75 f0             	pushl  -0x10(%ebp)
 69f:	8d 83 63 e7 ff ff    	lea    -0x189d(%ebx),%eax
 6a5:	50                   	push   %eax
 6a6:	e8 a5 fd ff ff       	call   450 <printf@plt>
 6ab:	83 c4 10             	add    $0x10,%esp
 6ae:	b8 00 00 00 00       	mov    $0x0,%eax
 6b3:	8d 65 f8             	lea    -0x8(%ebp),%esp
 6b6:	59                   	pop    %ecx
 6b7:	5b                   	pop    %ebx
 6b8:	5d                   	pop    %ebp
 6b9:	8d 61 fc             	lea    -0x4(%ecx),%esp
 6bc:	c3                   	ret    

000006bd <__x86.get_pc_thunk.ax>:
 6bd:	8b 04 24             	mov    (%esp),%eax
 6c0:	c3                   	ret    
 6c1:	66 90                	xchg   %ax,%ax
 6c3:	66 90                	xchg   %ax,%ax
 6c5:	66 90                	xchg   %ax,%ax
 6c7:	66 90                	xchg   %ax,%ax
 6c9:	66 90                	xchg   %ax,%ax
 6cb:	66 90                	xchg   %ax,%ax
 6cd:	66 90                	xchg   %ax,%ax
 6cf:	90                   	nop

000006d0 <__libc_csu_init>:
 6d0:	55                   	push   %ebp
 6d1:	57                   	push   %edi
 6d2:	56                   	push   %esi
 6d3:	53                   	push   %ebx
 6d4:	e8 07 fe ff ff       	call   4e0 <__x86.get_pc_thunk.bx>
 6d9:	81 c3 27 19 00 00    	add    $0x1927,%ebx
 6df:	83 ec 0c             	sub    $0xc,%esp
 6e2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 6e6:	8d b3 ec fe ff ff    	lea    -0x114(%ebx),%esi
 6ec:	e8 27 fd ff ff       	call   418 <_init>
 6f1:	8d 83 e8 fe ff ff    	lea    -0x118(%ebx),%eax
 6f7:	29 c6                	sub    %eax,%esi
 6f9:	c1 fe 02             	sar    $0x2,%esi
 6fc:	85 f6                	test   %esi,%esi
 6fe:	74 25                	je     725 <__libc_csu_init+0x55>
 700:	31 ff                	xor    %edi,%edi
 702:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 708:	83 ec 04             	sub    $0x4,%esp
 70b:	ff 74 24 2c          	pushl  0x2c(%esp)
 70f:	ff 74 24 2c          	pushl  0x2c(%esp)
 713:	55                   	push   %ebp
 714:	ff 94 bb e8 fe ff ff 	call   *-0x118(%ebx,%edi,4)
 71b:	83 c7 01             	add    $0x1,%edi
 71e:	83 c4 10             	add    $0x10,%esp
 721:	39 fe                	cmp    %edi,%esi
 723:	75 e3                	jne    708 <__libc_csu_init+0x38>
 725:	83 c4 0c             	add    $0xc,%esp
 728:	5b                   	pop    %ebx
 729:	5e                   	pop    %esi
 72a:	5f                   	pop    %edi
 72b:	5d                   	pop    %ebp
 72c:	c3                   	ret    
 72d:	8d 76 00             	lea    0x0(%esi),%esi

00000730 <__libc_csu_fini>:
 730:	f3 c3                	repz ret 

Disassembly of section .fini:

00000734 <_fini>:
 734:	53                   	push   %ebx
 735:	83 ec 08             	sub    $0x8,%esp
 738:	e8 a3 fd ff ff       	call   4e0 <__x86.get_pc_thunk.bx>
 73d:	81 c3 c3 18 00 00    	add    $0x18c3,%ebx
 743:	83 c4 08             	add    $0x8,%esp
 746:	5b                   	pop    %ebx
 747:	c3                   	ret    
